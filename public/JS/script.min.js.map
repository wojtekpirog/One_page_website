{"version":3,"sources":["script.js"],"names":["navbar","burgerBtn","navbarItems","burgerBtnBars","allSections","fullname","email","textarea","clearBtn","submitBtn","modal","modalShadow","modalCloseButton","footerYear","prepareElements","document","querySelector","querySelectorAll","addEventListeners","addEventListener","toggleNavbar","handleFormClear","handleFormSubmit","closeModal","window","handleObserver","event","preventDefault","forEach","input","value","clearError","checkForm","checkLength","checkEmailAddress","showModal","formInputs","showError","inputArray","length","minLength","maxLength","concat","previousElementSibling","textContent","slice","emailInput","test","message","style","borderColor","nextElementSibling","display","classList","contains","remove","setAttribute","item","removeEventListener","add","handleNavItemAnimation","delay","toggle","animationDelay","handleCurrentYear","year","Date","getFullYear","currentSection","scrollY","section","offsetTop","errorCount"],"mappings":"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","file":"script.min.js","sourcesContent":["let navbar;\nlet burgerBtn;\nlet navbarItems;\nlet burgerBtnBars;\nlet allSections;\nlet fullname;\nlet email;\nlet textarea;\nlet error;\nlet clearBtn;\nlet submitBtn;\nlet modal;\nlet modalShadow;\nlet modalCloseButton;\nlet footerYear;\n\nconst main = () => {\n  prepareElements();\n  addEventListeners();\n  handleCurrentYear();\n}\n\nconst prepareElements = () => {\n  navbar = document.querySelector(\".navbar\");\n  burgerBtn = document.querySelector(\".burger-btn\");\n  navbarItems = document.querySelectorAll(\".navbar__item\");\n  burgerBtnBars = document.querySelector(\".burger-btn__bars\");\n  allSections = document.querySelectorAll(\".section\");\n  fullname = document.querySelector(\"#fullname\");\n  email = document.querySelector(\"#email\");\n  textarea = document.querySelector(\"#message\");\n  error = document.querySelector(\".contact__form-error\");\n  clearBtn = document.querySelector(\".contact__form-btn--reset\");\n  submitBtn = document.querySelector(\".contact__form-btn--submit\");\n  modal = document.querySelector(\".modal\");\n  modalShadow = document.querySelector(\".modal-shadow\");\n  modalCloseButton = document.querySelector(\".modal__btn-close\");\n  footerYear = document.querySelector(\".footer__year\");\n}\n\nconst addEventListeners = () => {\n  burgerBtn.addEventListener(\"click\", toggleNavbar);\n  clearBtn.addEventListener(\"click\", handleFormClear);\n  submitBtn.addEventListener(\"click\", handleFormSubmit);\n  modalCloseButton.addEventListener(\"click\", closeModal);\n  window.addEventListener(\"scroll\", handleObserver);\n}\n\nconst handleFormClear = (event) => {\n  event.preventDefault();\n  [fullname, email, textarea].forEach((input) => {\n    input.value = \"\";\n    clearError(input);\n  });\n}\n\nconst handleFormSubmit = (event) => {\n  event.preventDefault();\n\n  checkForm([fullname, email, textarea]);\n  checkLength([fullname, email, textarea]);\n  checkEmailAddress(email);\n  showModal();\n}\n\nconst checkForm = (formInputs) => {\n  formInputs.forEach((input) => {\n    if (input.value === \"\") {\n      showError(input, \"Pole jest puste!\");\n    } else {\n      clearError(input);\n    }\n  });\n}\n\nconst checkLength = (inputArray) => {\n  inputArray.forEach((input) => {\n    if (input.value.length < input.minLength || input.value.length > input.maxLength) {\n      showError(input, `Pole \"${input.previousElementSibling.textContent.slice(0, -2)}\" musi zawierać od ${input.minLength} do ${input.maxLength} znaków.`);\n    } else {\n      clearError(input);\n    }\n  });\n}\n\nconst checkEmailAddress = (emailInput) => {\n  const regExp = /^[\\w\\.-]+@[a-zA-Z\\d\\.-]+\\.[a-zA-Z]{2,}$/;\n  regExp.test(emailInput.value) ? clearError(emailInput) : showError(emailInput, \"Adres e-mail jest nieprawidłowy!\");\n}\n\nconst showError = (input, message) => {\n  input.style.borderColor = \"tomato\";\n  input.nextElementSibling.style.display = \"block\";\n  input.nextElementSibling.textContent = message;\n}\n\nconst clearError = (input) => {\n  input.style.borderColor = \"#333\";\n  input.nextElementSibling.textContent = \"\";\n  input.nextElementSibling.style.display = \"none\";\n}\n\nconst toggleNavbar = () => {\n  if (!navbar.classList.contains(\"navbar--active\")) {\n    // If the navigation is not active, activate it & set the aria-expanded attribute to true\n    navbar.classList.add(\"navbar--active\");\n    burgerBtn.classList.add(\"burger-btn__active\");\n    burgerBtn.setAttribute(\"aria-expanded\", \"true\");\n    // Add an event listener to each link inside the navigation\n    navbarItems.forEach((item) => {\n      item.addEventListener(\"click\", () => {\n        navbar.classList.remove(\"navbar--active\");\n        burgerBtn.classList.remove(\"burger-btn__active\");\n      });\n    });\n  } else {\n    // If the navigation is active, deactivate it & set the aria-expanded attribute to false\n    navbar.classList.remove(\"navbar--active\");\n    burgerBtn.classList.remove(\"burger-btn__active\");\n    burgerBtn.setAttribute(\"aria-expanded\", \"false\");\n    // Remove the event listener from each link inside the navigation\n    navbarItems.forEach((item) => {\n      item.removeEventListener(\"click\", () => {\n        navbar.classList.remove(\"navbar--active\");\n        burgerBtn.classList.remove(\"burger-btn__active\");\n      });\n    });\n  }\n  \n  handleNavItemAnimation();\n  handleObserver();\n}\n\nconst handleNavItemAnimation = () => {\n  let delay = 0;\n\n  navbarItems.forEach((item) => {\n    item.classList.toggle(\"navbar__item-animation\");\n    item.style.animationDelay = `${delay}ms`;\n    delay += 100;\n  });\n}\n\nconst handleCurrentYear = () => {\n  const year = new Date().getFullYear();\n  footerYear.textContent = year;\n}\n\nconst handleObserver = () => {\n  const currentSection = window.scrollY; // Położenie krawędzi przeglądarki\n\n  allSections.forEach((section) => {\n    if (section.classList.contains(\"white-section\") && section.offsetTop <= currentSection + 20) {\n      burgerBtnBars.classList.add(\"black-bars\");\n    } else if (!section.classList.contains(\"white-section\") && section.offsetTop <= currentSection + 20) {\n      burgerBtnBars.classList.remove(\"black-bars\");\n    }\n  });\n}\n\nconst showModal = () => {\n  let errorCount = 0;\n\n  [fullname, email, textarea].forEach((input) => {\n    if (input.nextElementSibling.style.display === \"block\") {\n      errorCount += 1;\n    }\n  })\n\n  if (errorCount === 0) {\n    modal.classList.add(\"active\", \"animation\");\n    modalShadow.classList.add(\"active\", \"animation\");\n  }\n}\n\nconst closeModal = () => {\n  modal.classList.remove(\"active\", \"animation\");\n  modalShadow.classList.remove(\"active\", \"animation\");\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", main);"]}